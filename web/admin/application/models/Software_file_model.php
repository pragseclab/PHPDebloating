<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Software_file_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get software_file by id
     */
    function get_software_file($id)
    {
        return $this->db->get_where('software_files',array('id'=>$id))->row_array();
    }

    /*
     * Get all software_files
     */
    function get_all_software_files($id=null)
    {
        $this->db->select('software_files.id, software.name, software_version.version, description, file_name, line_count, removed')
         ->from('software_files')
         ->join('software_files_description', 'software_files.fk_software_files_description = software_files_description.id')
         ->join('software_version', 'software_files_description.fk_software_version_id = software_version.id')
         ->join('software', 'software_version.fk_software_id = software.id')
         ->order_by('id', 'desc');
        // return $this->db->get()->result_array();

        // $this->db->order_by('id', 'desc');
         if ($id == null)
           return $this->db->get()->result_array();
         else
           return $this->db->where('fk_software_files_description', $id)->get()->result_array();
    }

    /*
     * Get all software_file names filtered by fk_software_files_description
     */
    function get_all_software_file_names($fk_software_files_description=null)
    {
        $this->db->select('id, file_name')
         ->from('software_files')
         ->order_by('id', 'desc');
        if ($fk_software_files_description == null)
          return $this->db->get()->result_array();
        else
          return $this->db->where('fk_software_files_description', $fk_software_files_description)->get()->result_array();
    }

    /*
     * Get all software_file filtered by fk_software_files_description with removed field set to 1
     */
    function get_all_software_files_descriptions_to_be_removed($id)
    {
        $this->db->set('removed', 1);
        $this->db->where('fk_software_files_description', $id);
        $this->db->update('software_files');

        $this->db->query('update software_files set removed = -1
                          where software_files.file_name
                          in (select file_name from covered_files)
                          and fk_software_files_description = ?',
                          $id);

        return $this->db->get_where('software_files', array('fk_software_files_description'=>$id, 'removed'=>1))->result_array();
    }

    /*
     * function to add new software_file
     */
    function add_software_file($params, $files)
    {
        $this->db->insert('software_files_description',$params);
        $fk_software_files_description = $this->db->insert_id();
        foreach($files as $file) {
            $row['file_name'] = $file;
            $row['line_count'] = -1;
            $row['removed'] = 0;
            $row['fk_software_files_description'] = $fk_software_files_description;
            $this->db->insert('software_files', $row);
        }
        return $this->db->insert_id();
    }

    /*
     * function to update software_file
     */
    function update_software_file($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('software_files',$params);
    }

    /*
     * function to delete software_file
     */
    function delete_software_file($id)
    {
        return $this->db->delete('software_files',array('id'=>$id));
    }

    /*
     * Get all software_files_description
     */
    function get_all_software_files_descriptions()
    {
        $this->db->select('software_files_description.id, software.name, software_version.version, description')
         ->from('software_files_description')
         ->join('software_version', 'software_files_description.fk_software_version_id = software_version.id')
         ->join('software', 'software_version.fk_software_id = software.id')
         ->order_by('id', 'desc');
        return $this->db->get()->result_array();
    }
}
